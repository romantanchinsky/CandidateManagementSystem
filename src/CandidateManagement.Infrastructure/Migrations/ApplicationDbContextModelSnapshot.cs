// <auto-generated />
using System;
using System.Collections.Generic;
using CandidateManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CandidateManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CandidateManagement.Domain.Entities.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WorkSchedule")
                        .HasColumnType("integer");

                    b.Property<Guid>("WorkingGroupId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("WorkSchedule");

                    b.HasIndex("WorkingGroupId");

                    b.ToTable("Candidates", (string)null);
                });

            modelBuilder.Entity("CandidateManagement.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("CandidateManagement.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("CandidateManagement.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<Guid?>("WorkingGroupId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_Login");

                    b.HasIndex("WorkingGroupId")
                        .HasDatabaseName("IX_Users_WorkGroupId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("CandidateManagement.Domain.Entities.Verification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<IReadOnlyCollection<Guid>>("FoundCandidateIds")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<IReadOnlyCollection<Guid>>("FoundEmployeeIds")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("SearchedFullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<Guid>("WhoStartedId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StartedAt")
                        .HasDatabaseName("IX_Verifications_StartedAt");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Verifications_Status");

                    b.HasIndex("Status", "StartedAt")
                        .HasDatabaseName("IX_Verifications_Status_StartedAt");

                    b.ToTable("Verifications", (string)null);
                });

            modelBuilder.Entity("CandidateManagement.Domain.Entities.WorkingGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_WorkGroups_Name");

                    b.ToTable("WorkGroups", (string)null);
                });

            modelBuilder.Entity("CandidateManagement.Domain.Entities.Candidate", b =>
                {
                    b.HasOne("CandidateManagement.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CandidateManagement.Domain.Entities.WorkingGroup", null)
                        .WithMany("Candidates")
                        .HasForeignKey("WorkingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CandidateManagement.Domain.Entities.CandidateData", "CandidateData", b1 =>
                        {
                            b1.Property<Guid>("CandidateId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<DateTime>("DateOfBirth")
                                .HasColumnType("date");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid");

                            b1.HasKey("CandidateId");

                            b1.ToTable("Candidates");

                            b1.WithOwner()
                                .HasForeignKey("CandidateId");

                            b1.OwnsOne("CandidateManagement.Domain.ValueObjects.Email", "Email", b2 =>
                                {
                                    b2.Property<Guid>("CandidateDataCandidateId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("Email");

                                    b2.HasKey("CandidateDataCandidateId");

                                    b2.ToTable("Candidates");

                                    b2.WithOwner()
                                        .HasForeignKey("CandidateDataCandidateId");
                                });

                            b1.OwnsOne("CandidateManagement.Domain.ValueObjects.FullName", "FullName", b2 =>
                                {
                                    b2.Property<Guid>("CandidateDataCandidateId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("FirstName");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("LastName");

                                    b2.Property<string>("Patronymic")
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("Patronymic");

                                    b2.HasKey("CandidateDataCandidateId");

                                    b2.ToTable("Candidates");

                                    b2.WithOwner()
                                        .HasForeignKey("CandidateDataCandidateId");
                                });

                            b1.OwnsOne("CandidateManagement.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b2 =>
                                {
                                    b2.Property<Guid>("CandidateDataCandidateId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("character varying(20)")
                                        .HasColumnName("PhoneNumber");

                                    b2.HasKey("CandidateDataCandidateId");

                                    b2.ToTable("Candidates");

                                    b2.WithOwner()
                                        .HasForeignKey("CandidateDataCandidateId");
                                });

                            b1.OwnsMany("CandidateManagement.Domain.Entities.SocialNetwork", "SocialNetworks", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<Guid>("CandidateId")
                                        .HasColumnType("uuid");

                                    b2.Property<DateTime>("DateAdded")
                                        .HasColumnType("timestamp with time zone");

                                    b2.Property<string>("Type")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)");

                                    b2.Property<string>("Username")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.HasKey("Id");

                                    b2.HasIndex("CandidateId");

                                    b2.ToTable("Candidates_SocialNetworks");

                                    b2.WithOwner()
                                        .HasForeignKey("CandidateId");
                                });

                            b1.Navigation("Email")
                                .IsRequired();

                            b1.Navigation("FullName")
                                .IsRequired();

                            b1.Navigation("PhoneNumber")
                                .IsRequired();

                            b1.Navigation("SocialNetworks");
                        });

                    b.Navigation("CandidateData")
                        .IsRequired();
                });

            modelBuilder.Entity("CandidateManagement.Domain.Entities.Employee", b =>
                {
                    b.OwnsOne("CandidateManagement.Domain.Entities.CandidateData", "CandidateData", b1 =>
                        {
                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.Property<DateTime>("DateOfBirth")
                                .HasColumnType("date");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");

                            b1.OwnsOne("CandidateManagement.Domain.ValueObjects.Email", "Email", b2 =>
                                {
                                    b2.Property<Guid>("CandidateDataEmployeeId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("Email");

                                    b2.HasKey("CandidateDataEmployeeId");

                                    b2.ToTable("Employees");

                                    b2.WithOwner()
                                        .HasForeignKey("CandidateDataEmployeeId");
                                });

                            b1.OwnsOne("CandidateManagement.Domain.ValueObjects.FullName", "FullName", b2 =>
                                {
                                    b2.Property<Guid>("CandidateDataEmployeeId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("FirstName")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("FirstName");

                                    b2.Property<string>("LastName")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("LastName");

                                    b2.Property<string>("Patronymic")
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("Patronymic");

                                    b2.HasKey("CandidateDataEmployeeId");

                                    b2.ToTable("Employees");

                                    b2.WithOwner()
                                        .HasForeignKey("CandidateDataEmployeeId");
                                });

                            b1.OwnsOne("CandidateManagement.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b2 =>
                                {
                                    b2.Property<Guid>("CandidateDataEmployeeId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("character varying(20)")
                                        .HasColumnName("PhoneNumber");

                                    b2.HasKey("CandidateDataEmployeeId");

                                    b2.ToTable("Employees");

                                    b2.WithOwner()
                                        .HasForeignKey("CandidateDataEmployeeId");
                                });

                            b1.OwnsMany("CandidateManagement.Domain.Entities.SocialNetwork", "SocialNetworks", b2 =>
                                {
                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("uuid");

                                    b2.Property<DateTime>("DateAdded")
                                        .HasColumnType("timestamp with time zone");

                                    b2.Property<Guid>("EmployeeId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Type")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)");

                                    b2.Property<string>("Username")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.HasKey("Id");

                                    b2.HasIndex("EmployeeId");

                                    b2.ToTable("Employees_SocialNetworks");

                                    b2.WithOwner()
                                        .HasForeignKey("EmployeeId");
                                });

                            b1.Navigation("Email")
                                .IsRequired();

                            b1.Navigation("FullName")
                                .IsRequired();

                            b1.Navigation("PhoneNumber")
                                .IsRequired();

                            b1.Navigation("SocialNetworks");
                        });

                    b.Navigation("CandidateData")
                        .IsRequired();
                });

            modelBuilder.Entity("CandidateManagement.Domain.Entities.User", b =>
                {
                    b.HasOne("CandidateManagement.Domain.Entities.WorkingGroup", null)
                        .WithMany("Participants")
                        .HasForeignKey("WorkingGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("CandidateManagement.Domain.ValueObjects.FullName", "FullName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("LastName");

                            b1.Property<string>("Patronymic")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("Patronymic");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("FullName")
                        .IsRequired();
                });

            modelBuilder.Entity("CandidateManagement.Domain.Entities.WorkingGroup", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
